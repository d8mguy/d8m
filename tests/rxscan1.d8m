// test the incremental scanning of submatches in regexp, aka poor man's lexer
import "regexp"
val ptnstrgs = [",", "[a-zA-Z_][a-zA-Z_0-9]*", `"(?:[^\\\n"]|\\[nt"\\])*"`, "(?s)`.*?`", "//.*\n", "[0-9]*\\.[0-9]+", "[0-9]+"]
val foo = \imp(b:list(byte)) {
    val tokScanner = [regexp.scanexpT: ptnstrgs]
    var ofs = 0
    while(!tokScanner.done(b, ofs)) {
        val rslt = tokScanner.next(b, ofs)
        if(rslt.count != 3) break
        ofs = rslt[1]
        println(rslt)
    }
}
compile(foo(`er koei 3498, "398 4kkj 34oiu s"
// 3oulkj sdfiu
xxx `))
